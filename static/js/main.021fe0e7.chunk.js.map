{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","helpers/userUtils.ts","helpers/todoUtils.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","email","name","Typography","variant","component","className","Link","href","color","TodoInfo","todo","title","id","completed","ListItem","cn","ListItemText","TodoList","todos","List","map","username","getUser","userId","usersFromServer","find","todosUsers","App","useState","setTitle","setTodos","selectedUser","setSelectedUser","titleError","setTitleError","userError","setUserError","Container","maxWidth","textAlign","gutterBottom","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","FormControl","fullWidth","sx","marginBottom","TextField","type","label","placeholder","value","onChange","filteredInput","target","replace","error","Boolean","helperText","InputLabel","htmlFor","Select","Number","inputProps","input","OutlinedInput","MenuItem","disabled","FormHelperText","Button","size","display","margin","marginTop","fontSize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.021fe0e7.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { Link, Typography } from '@mui/material';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <Typography variant=\"body1\" component=\"div\" className=\"UserInfo\">\n      <Link href={`mailto:${email}`} color=\"inherit\">\n        {name}\n      </Link>\n    </Typography>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Typography, ListItem, ListItemText } from '@mui/material';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    user,\n    title,\n    id,\n    completed,\n  } = todo;\n\n  return (\n    <ListItem\n      key={id}\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <ListItemText>\n        <Typography variant=\"h5\" className=\"TodoInfo__title\">\n          {title}\n        </Typography>\n      </ListItemText>\n\n      {user && <UserInfo user={user} />}\n    </ListItem>\n  );\n};\n","import { FC } from 'react';\nimport { List } from '@mui/material';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: FC<Props> = ({ todos = [] }) => {\n  return (\n    <List>\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </List>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport const getUser = (userId: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n","import { Todo } from '../types/Todo';\nimport { getUser } from './userUtils';\nimport todosFromServer from '../api/todos';\n\nexport const todosUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { FC, useState } from 'react';\nimport './App.scss';\n\nimport {\n  Container,\n  Typography,\n  TextField,\n  Select,\n  MenuItem,\n  Button,\n  SelectChangeEvent,\n  FormHelperText,\n  OutlinedInput,\n  FormControl,\n  InputLabel,\n} from '@mui/material';\n\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport usersFromServer from './api/users';\nimport { getUser } from './helpers/userUtils';\nimport { todosUsers } from './helpers/todoUtils';\nimport '@fontsource/roboto/700.css';\n\nexport const App: FC = () => {\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(todosUsers);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [titleError, setTitleError] = useState('');\n  const [userError, setUserError] = useState('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!selectedUser) {\n      setUserError('Please choose a user');\n    }\n\n    if (!title.trim()) {\n      setTitleError('Please enter a title');\n    }\n\n    if (!selectedUser || !title.trim()) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: Math.max(...todos.map(todo => todo.id)) + 1,\n      title,\n      completed: false,\n      user: getUser(selectedUser),\n      userId: selectedUser,\n    };\n\n    setTodos([...todos, newTodo]);\n\n    setTitle('');\n    setSelectedUser(0);\n    setTitleError('');\n    setUserError('');\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const input = event.target.value;\n    const filteredInput = input.replace(/[^A-Za-zА-Яа-я0-9\\s]/g, '');\n\n    setTitle(filteredInput);\n    setTitleError('');\n  };\n\n  const handleUserChange = (event: SelectChangeEvent<number>) => {\n    setSelectedUser(Number(event.target.value));\n    setUserError('');\n  };\n\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"sm\">\n        <Typography\n          variant=\"h2\"\n          component=\"h1\"\n          textAlign=\"center\"\n          gutterBottom\n        >\n          Add todo form\n        </Typography>\n\n        <form\n          action=\"/api/users\"\n          method=\"POST\"\n          onSubmit={handleSubmit}\n        >\n          <FormControl fullWidth sx={{ marginBottom: '20px' }}>\n            <TextField\n              type=\"text\"\n              label=\"Title\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n              error={Boolean(titleError)}\n              helperText={titleError}\n            />\n          </FormControl>\n\n          <FormControl fullWidth>\n            <InputLabel htmlFor=\"user-select\">User</InputLabel>\n            <Select\n              id=\"user-select\"\n              value={selectedUser}\n              onChange={handleUserChange}\n              inputProps={{ 'data-cy': 'userSelect' }}\n              error={Boolean(userError)}\n              input={<OutlinedInput label=\"User\" />}\n            >\n              <MenuItem value={0} disabled>\n                Choose a user\n              </MenuItem>\n\n              {usersFromServer.map(user => (\n                <MenuItem key={user.id} value={user.id}>\n                  {user.name}\n                </MenuItem>\n              ))}\n            </Select>\n\n            {Boolean(userError) && (\n              <FormHelperText error>{userError}</FormHelperText>\n            )}\n          </FormControl>\n\n          <Button\n            type=\"submit\"\n            data-cy=\"submitButton\"\n            variant=\"contained\"\n            size=\"large\"\n            fullWidth\n            sx={{\n              display: 'block',\n              margin: '0 auto',\n              marginTop: '20px',\n              fontSize: '20px',\n            }}\n          >\n            Add\n          </Button>\n        </form>\n\n        <TodoList todos={todos} />\n      </Container>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}